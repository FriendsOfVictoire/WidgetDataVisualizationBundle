{% extends 'VictoireCoreBundle:Widget:show.html.twig' %}

{% block content %}
<canvas id="chartWidget{{ widget.id}}"></canvas>
<script>
$(document).ready(function() {
    var ctx = document.getElementById("chartWidget{{ widget.id}}");
    var chartWidget{{ widget.id}} = new Chart(ctx, { {% for dataSet in widget.dataSets  %}{% if loop.first %}

        type: '{{ dataSet.type }}',
        data: {
            labels: {{ _self.displayArray(widget.labels) }},
            datasets: [{% endif %}{ {% if not loop.first %}

                type: "{{ dataSet.type }}", {% endif %}

                label: "{{ dataSet.title }}",
                data: {{ _self.displayData(dataSet.data) }} ,
            {{  _self.displayOptions(dataSet.chartOption) }}

            }{% if not loop.last %},{% endif %}{% if loop.last %}]


        }{% endif %}{% endfor %},
        options: {
    {% if yAxes|length > 0 %}
            scales: {
                yAxes: [{% for yAxe in yAxes %}
                {
                    position: {{ yAxe|raw }},
                    "id": {{ yAxe|raw }}
                }{% if not loop.last %},{% endif %}{% endfor %}
                ]
            },
    {% endif %}
            legend: { {% if widget.legend %}
                {{ _self.displayGlobalOptions(widget.legend) }}{% endif %}
            },
            title: { {% if widget.title %}
                {{ _self.displayGlobalOptions(widget.title) }}{% endif %}
            },
            tooltips: {
                {% if widget.tooltips %}
                    {{ _self.displayGlobalOptions(widget.tooltips) }},
                    callbacks: {
                        {% if widget.tooltips.displayOnBorders != 1 or widget.labels > 3 %}
                            {% if widget.dataSets|length > 1 %}
                                label: function(tooltipItems, data) {
                                    return data.datasets[tooltipItems.datasetIndex].label +' : ' + tooltipItems.yLabel + '{{ widget.tooltips.afterTitle }}';
                                }
                            {% else %}
                                label: function(tooltipItem, data) {
                                    return data.labels[tooltipItem.index] + ' : ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] + '{{ widget.tooltips.afterTitle }}';
                                }
                            {% endif %}
                        {% else %}
                            {% if widget.dataSets|length > 1 %}
                                label: function(tooltipItems, data) {
                                    return data.datasets[tooltipItems.datasetIndex].label +' : ' + tooltipItems.yLabel + '{{ widget.tooltips.afterTitle }}';
                                }
                            {% else %}
                                beforeLabel: function(tooltipItem, data) {
                                    return data.labels[tooltipItem.index] + ' : ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] + '{{ widget.tooltips.afterTitle }}';
                                },
                                label: function(tooltipItem, data) {
                                    return '';
                                }
                            {% endif %}
                        {% endif %}
                    }
                {% endif %}
            }
        }
    });
});
</script>
{% endblock content %}
{% macro displayArray(array) %}
    [{% for item in array %}"{{ item }}"{% if not loop.last %},{% endif %}{% endfor %}]
{% endmacro %}
{% macro displayData(array) %}
    [{% for item in array %}{{ item }}{% if not loop.last %},{% endif %}{% endfor %}]
{% endmacro %}
{% macro displayOptions(chartOption) %}
    {% for optionValue in getChartOptionValues(chartOption)  %}
        {% set value = attribute(chartOption, optionValue)|raw %}
        {% if value == '"true"' %}{% set value = "true" %}{% elseif value == '"false"' %}{% set value = "false" %}{% endif %}
        {{ optionValue }} : {{ value|raw }}{% if not loop.last %},{% endif %}
    {% endfor %}
{% endmacro %}
{% macro displayGlobalOptions(globalOption) %}
    {% for optionValue in getGlobalOptionValues(globalOption)  %}
        {% set value = attribute(globalOption, optionValue) %}
            {{ optionValue }} : {{ displayJsonFor(value) }}{% if not loop.last %},{% endif %}

    {% endfor %}
{% endmacro %}